// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PROGRAM-1]
	_ = x[FOR_STATEMENT-2]
	_ = x[EXPRESSION_STATEMENT-3]
	_ = x[INFIX_EXPRESSION-4]
	_ = x[ASSIGNMENT_EXPRESSION-5]
	_ = x[OR_EXPRESSION-6]
	_ = x[AND_EXPRESSION-7]
	_ = x[BLOCK_EXPRESSION-8]
	_ = x[ATTR_EXPRESSION-9]
	_ = x[NIL_LITERAL-10]
	_ = x[BOOLEAN_LITERAL-11]
	_ = x[IDENTIFIER_LITERAL-12]
	_ = x[NUMBER_LITERAL-13]
	_ = x[STRING_LITERAL-14]
	_ = x[FUNCTION_LITERAL-15]
	_ = x[ARRAY_LITERAL-16]
}

const _NodeType_name = "PROGRAMFOR_STATEMENTEXPRESSION_STATEMENTINFIX_EXPRESSIONASSIGNMENT_EXPRESSIONOR_EXPRESSIONAND_EXPRESSIONBLOCK_EXPRESSIONATTR_EXPRESSIONNIL_LITERALBOOLEAN_LITERALIDENTIFIER_LITERALNUMBER_LITERALSTRING_LITERALFUNCTION_LITERALARRAY_LITERAL"

var _NodeType_index = [...]uint8{0, 7, 20, 40, 56, 77, 90, 104, 120, 135, 146, 161, 179, 193, 207, 223, 236}

func (i NodeType) String() string {
	i -= 1
	if i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
